kind: workload
name: {{ .Release.Name }}-etcd
description: etcd
tags: {}
spec:
  type: stateful
  containers:
    - name: etcd
      command: "/bin/bash"
      args:
        - "/etcd/start.sh"
      cpu: "{{ .Values.resources.cpu }}"
      image: controlplanecorporation/etcd:0.1
      inheritEnv: false
      memory: {{ .Values.resources.memory }}
      ports:
        - number: 2379
          protocol: tcp
        - number: 2380
          protocol: tcp
      volumes:
        - path: /var/lib/etcd
          recoveryPolicy: retain
          uri: cpln://volumeset/{{ .Release.Name }}-etcd-vs
        - path: /etcd/start.sh
          uri: cpln://secret/etcd-startup.payload
  identityLink: //gvc/{{ .Values.global.cpln.gvc }}/identity/etcd-identity
  defaultOptions:
    multiZone:
      enabled: {{ .Values.multiZone }}
    autoscaling:
      keda: {}
      maxConcurrency: 0
      maxScale: {{ .Values.replicas }}
      metric: cpu
      minScale: {{ .Values.replicas }}
      scaleToZeroDelay: 300
      target: 100
    capacityAI: false
    debug: false
    suspend: false
    timeoutSeconds: 5
  firewallConfig:
    external:
      inboundAllowCIDR: []
      inboundBlockedCIDR: []
      outboundAllowCIDR: []
      outboundAllowHostname: []
      outboundAllowPort: []
      outboundBlockedCIDR: []
    internal:
      inboundAllowType: {{ .Values.internal_access.type }}
      {{- if .Values.internal_access.workloads }}
      inboundAllowWorkload: {{ .Values.internal_access.workloads | toYaml | nindent 8 }}
      {{- end }}
  loadBalancer:
    direct:
      enabled: false
      ports: []
    replicaDirect: true
  supportDynamicTags: false